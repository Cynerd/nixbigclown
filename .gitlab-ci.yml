stages:
  - build
  - test
  - style

workflow:
  rules:
    - if: $CI_PIPELINE_SOURCE == "push"

variables:
  GIT_DEPTH: 0
  GIT_SUBMODULE_STRATEGY: recursive
  GIT_SUBMODULE_UPDATE_FLAGS: --jobs 2

.nix:
  image: nixos/nix
  tags:
    - docker
  cache:
    key: "nix"
    paths:
      - ".nix-cache"
  before_script:
    - echo "experimental-features = nix-command flakes" >>/etc/nix/nix.conf
    - echo "system-features = nixos-test benchmark big-parallel" >>/etc/nix/nix.conf
    - echo "cores = 0" >>/etc/nix/nix.conf
    - echo "max-jobs = 32" >>/etc/nix/nix.conf
    - find /nix/store -maxdepth 1 ! -name \*.drv | sort >/nix/.before
  after_script:
    - find /nix/store -maxdepth 1 ! -name \*.drv | sort >/nix/.after
    - comm -13 /nix/.before /nix/.after | xargs nix copy --to "file://$PWD/.nix-cache"

## Build stage #################################################################
.build:
  stage: build
  extends: .nix
  script:
    - "nix build .#$ARG"

bigclown-gateway:
  extends: .build
  variables:
    ARG: bigclown-gateway

bigclown-mqtt2influxdb:
  extends: .build
  variables:
    ARG: bigclown-mqtt2influxdb

bigclown-firmware-tool:
  extends: .build
  variables:
    ARG: bigclown-firmware-tool

bigclown-control-tool:
  extends: .build
  variables:
    ARG: bigclown-control-tool

## Test stage ##################################################################

nix-check:
  stage: test
  extends: .nix
  script:
    - nix flake check

include:
  - template: Security/SAST.gitlab-ci.yml
  - template: Security/Secret-Detection.gitlab-ci.yml

## Style stage #################################################################

nixfmt:
  stage: style
  extends: .nix
  allow_failure: true
  script:
    - "nix fmt"
    - "git diff --exit-code"
